input {
    jdbc {
        jdbc_driver_library => "/home/studing/GolandProjects/src/go-mysql-elasticsearch/logstash/mysql-connector-java-8.0.26/mysql-connector-java-8.0.26.jar"
        jdbc_driver_class => "com.mysql.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://localhost:3306/sync_es"
        jdbc_user => root
        jdbc_password => "669193"
        clean_run => true
        use_column_value => true
        record_last_run => true
        tracking_column => "updated"
        tracking_column_type => numeric
        schedule => "* * * * * *"
        statement => "select resource.id as id, resource.name as name, resource.description as description, resource.create_time as created, resource.update_time as updated, resource.delete_time as updated, resource_role.user_id as user_id, resource_role.role_id as role_id FROM resource LEFT JOIN resource_role ON resource.id = resource_role.resource_id"
   }
}

filter {
     aggregate {
        task_id => "%{id}"
        code => "
            map['id'] = event.get('id')
            map['name'] = event.get('name')
            map['description'] = event.get('description')
            map['created'] = event.get('created')
            map['updated'] = event.get('updated')
            map['deleted'] = event.get('deleted')
            map['user_role'] ||=[]
            if (event.get('user_id') != nil)
                map['user_role'].delete_if{|x| x['user_id'] == event.get('user_id')}
                map['user_role'] << {
                    'user_id' => event.get('user_id'),
                    'role_id' => event.get('role_id'),
                }
            end
            event.cancel()
        "
        push_previous_map_as_event => true
        timeout => 5
    }
}

output {
   stdout {
        #codec => json_lines
   }
        elasticsearch {
        hosts => ["127.0.0.1:9200"]
        index => "resource"
        document_id => "%{id}"
   }
}