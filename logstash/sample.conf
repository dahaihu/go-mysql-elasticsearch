input {
  jdbc {
    jdbc_driver_library => "/home/studing/GolandProjects/src/go-mysql-elasticsearch/logstash/mysql-connector-java-8.0.26/mysql-connector-java-8.0.26.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://localhost:3306/sync_es"
    jdbc_user => root
    jdbc_password => "669193"
    use_column_value => true
    tracking_column => "regdate"
    tracking_column_type => timestamp
    record_last_run => true
    last_run_metadata_path => "last_update_time.txt"
    statement => "SELECT * FROM customer where regdate >:sql_last_value;"
    schedule => "* * * * *"
  }
}


filter {
#这里做聚合
     aggregate {
        task_id => "%{id}"
        code => "
            map['id'] = event.get('id')
            map['register_name'] = event.get('register_name')
            map['mobile'] = event.get('mobile')
            map['avatar'] = event.get('avatar')
            map['pet_list'] ||=[]
            map['pets'] ||=[]
            if (event.get('pet_id') != nil)
                if !(map['pet_list'].include? event.get('pet_id'))
                    map['pet_list'] << event.get('pet_id')
                    map['pets'] << {
                        'pet_id' => event.get('pet_id'),
                        'name' => event.get('name'),
                        'images' => event.get('images'),
                        'breed_id' => event.get('breed_id'),
                        'breed_name' => event.get('breed_name'),
                        'birthday' => event.get('birthday')
                    }
                end
            end
            event.cancel()
        "

        push_previous_map_as_event => true
        timeout => 5
    }
    json {
        source => "message"
        remove_field => ["message"]
        #remove_field => ["message", "type", "@timestamp", "@version"]
    }
    mutate  {
        #将不需要的JSON字段过滤，且不会被存入 ES 中
        remove_field => ["tags", "@timestamp", "@version"]
    }
}

output {
  elasticsearch {
    document_id=> "%{id}"
    document_type => "doc"
    index => "customer"
    hosts => ["http://localhost:9200"]
  }
  stdout{
    codec => rubydebug
  }
}
